# do this when a new issue is created
on:
  issues:
    types: [opened]
name: Create New Abstract

permissions:
  actions: read
  checks: read
  contents: read
  deployments: read
  issues: write
  discussions: read
  packages: read
  pages: read
  pull-requests: read
  repository-projects: read
  security-events: read
  statuses: read

jobs:
  generate-abstract:
    if: contains(github.event.issue.labels.*.name, 'abstract')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    # TODO: Replace with OIDC
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.MONDRIANMUSE_AZURE_CREDENTIALS }}
    # Create abstract and set the step output to the abstract
    - name: 📝 Create an abstract
      env:
        AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
      run: | 
        python create-abstract_promptflow.py --answers "${{ github.event.issue.body }}" > abstract.txt
    - run: gh issue comment $ISSUE --body "$(cat abstract.txt)"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ISSUE: ${{ github.event.issue.html_url }}
    - name: 🔍 Review the abstract
      env:
        AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
      run: | 
        python review-abstract_promptflow.py --answers "${{ github.event.issue.body }}" --abstract "$(cat abstract.txt)" > review.txt
    - run: gh issue comment $ISSUE --body "$(cat review.txt)"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ISSUE: ${{ github.event.issue.html_url }}
    - name: 🧐 Critique the abstract
      env:
        AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
      run: | 
        python writing-critic_promptflow.py --abstract "$(cat abstract.txt)" > critique.txt
    - run: gh issue comment $ISSUE --body "$(cat critique.txt)"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ISSUE: ${{ github.event.issue.html_url }}
      
